name: C++ CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [gcc, clang]
        build_type: [Debug, Release]
    env:
      CXXFLAGS: "-Wall -Wextra -Werror -std=c++20"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake cppcheck valgrind clang-tidy cpputest gcovr

      - name: Build
        run: make build

      - name: Run Unit Tests
        run: make test

      - name: Run Cppcheck (Static Code Analysis)
        run: make cppcheck

      - name: Run Clang-Tidy (Linting)
        run: make tidy

      - name: Run Valgrind (Memory Leak Detection)
        if: matrix.build_type == 'Debug'
        run: valgrind --leak-check=full ./build/src/Main

      - name: Check Code Formatting with Clang-Format
        run: |
          clang-format --version
          find ./src -name '*.cpp' -o -name '*.hpp' | xargs clang-format -style=file --dry-run -Werror

      - name: Generate Coverage Report and Enforce 80% Threshold
        run: |
          make clean
          make coverage

          gcovr -r . --fail-under-line 80 --html --html-details -o coverage.html

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: build/

      # - name: Upload Coverage Report
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: coverage-report
      #     path: coverage.html
